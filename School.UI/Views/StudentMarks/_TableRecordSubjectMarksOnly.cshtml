@model School.UI.ViewModels.StudentSubjectMarksVM



                @{
                    int rows = 0;
                    string rowId = "";
                }
                <input id="nomberOfRows" type="hidden" value=@Model.StudentSubjectMarksList.Count() />

                <table id="tableId" class="table" style="border:1px solid silver;">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.StudentSubjectMarks.StudentId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StudentSubjectMarks.FirstName)
                            </th>
                            <th style='display:none;'>
                                @Html.DisplayNameFor(model => model.StudentSubjectMarks.SubjectName)
                            </th>
                            <th style='min-width:80px;max-width:80px'>
                                @Html.DisplayNameFor(model => model.StudentSubjectMarks.MarkValue)
                            </th>
                            <th style='min-width:60px;max-width:60px;display:none'>
                                @Html.DisplayNameFor(model => model.StudentSubjectMarks.Symbol)
                            </th>
                            <th style='min-width:60px;max-width:60px;display:none'>
                                Edit
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.StudentSubjectMarksList)
                        {
                            rows++;
                            rowId = "rowId" + rows;
                            <tr>
                                <td>
                                    @Html.DisplayFor(model => item.StudentId)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.FirstName) @Html.DisplayFor(model => item.LastName)
                                </td>
                                <td style='display:none;'>
                                    @Html.DisplayFor(model => item.SubjectName)
                                </td>
                                <td style='min-width:80px;max-width:80px'>
                                    @Html.TextBoxFor(model => item.MarkValue, new { @class = "form-control", @id = ""+ @rowId })
                                </td>
                                <td style='min-width:60px;max-width:60px;display:none'>
                                    @Html.DisplayFor(model => item.Symbol, new { @class = "form-control" })
                                </td>

                                <td style='min-width:60px;max-width:60px;display:none'>
                                    <button id="btnEdit" type="button" class="btnEdit btn btn-primary">Edit</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

<script>

    $("#gradeId").change(function (event) {
        event.preventDefault();
        event.stopPropagation();
        // debugger;
        var selectedValue = $("#gradeId option:selected").val();
        var data = {
            'selectedValue': selectedValue.trim(),
            'gradeId': selectedValue.trim()
        };

        //selectedValue = "Grade8";//position 1
        var _searchValue = selectedValue.trim().substring(0, 5);

        var partialHolder = "#tableHolderId";
        var header = 'Update UserInfor';
        var pageObj = {};
        if (_searchValue === "Grade") {
            header = 'Update UserInfor';
            var url = '/StudentMarks/UpdateDropBox';
            partialHolder = "#inputHolderId66";
            pageObj = { function: "append", url: url, type: "Post", data: data, header: header, pageId: "", partialHolder: partialHolder };
            classControllerHelper.callController(pageObj);
        }
        else {
            partialHolder = "#studentSubjectMarks-page #inputHolderId";
            var response = '<input id="txtName" type="text" placeholder="search by name" class="col-md-12 form-control" />'
            pageObj = { function: "append", partialHolder: partialHolder };
            classControllerHelper.appendPartial(response, pageObj);
        }
    });

    $("#btnSave").click(function (event) {
        event.preventDefault();
        event.stopPropagation();

        var _inputs = ['subjectId', 'pickdateId'];
        ClassValidationHelper.preValidateDropbox(['gradeId']);
        var isvalid = ClassValidationHelper.ValidateInput(_inputs)
        if (isvalid === false) {
            ClassValidationHelper.errorEmptyField();
            return isvalid;
        }

        var nomberOfRows = Number($("#nomberOfRows").val()) + 1;
        var _inputs = [];
        for (var i = 1; i < nomberOfRows; i++) {
            _inputs.push("rowId" + i);
        }

        isvalid = ClassValidationHelper.ValidateInput(_inputs)
        if (isvalid === false) {
            ClassValidationHelper.errorEmptyField();
            return isvalid;
        }

        var grade = $("#gradeId option:selected").val();
        var subjectId = $("#subjectId").val();
        var searchDate = $("#pickdateId").val();
    var commonData = {
        'StudentId': "",
        'GradeId': grade.trim(),
        'SubjectId': subjectId.trim(),
        'MarkValue': 0,
        'Score': 0,
        'ExamType': "none",
        'ExamDate': searchDate.trim()
    };

        var data = {
            'jsonString': JSON.stringify(tabledata(commonData)),
            'GradeId': grade.trim(),
            'subjectId': subjectId.trim(),
            'searchDate': searchDate.trim(),
        };

        var url = '/StudentMarks/SaveRecord';
        var pageObj = { function: "message", url: url, type: "Post", data: data, header: "", pageId: "", partialHolder: "" };
        classControllerHelper.callController(pageObj);

    });


    $("#btnSeachEdit").click(function (event) {

        event.preventDefault();
        event.stopPropagation();

        var _inputs = ['subjectId','pickdateId'];
        ClassValidationHelper.preValidateDropbox(['gradeId']);
        var isvalid = ClassValidationHelper.ValidateInput(_inputs)
        if (isvalid === false) {
            ClassValidationHelper.errorEmptyField();
            return isvalid
        }

        var grade = $("#gradeId option:selected").val();
        var subjectId = $("#subjectId").val();
        var searchDate = $("#pickdateId").val();
        var data = {
            'GradeId': grade.trim(),
            'subjectId': subjectId.trim(),
            'searchDate': searchDate.trim(),
        };
        var partialHolder = "#studentSubjectMarks-page #tableHolderId";
        var header = 'Update UserInfor';
        var url = '/StudentMarks/SearchRecord';
        var pageObj = { function: "append", url: url, type: "Post", data: data, header: header, pageId: "", partialHolder: partialHolder };
        classControllerHelper.callController(pageObj);

    });

    $('#tableId .btnEdit').click(function () {
        event.preventDefault();
        event.stopPropagation();
        var score = $(this).closest('td').parent('tr').find("td:eq(3)").text().trim();
        $(this).closest('td').parent('tr').find("td:eq(3)").html(" <input type='text' value='" + score + "' style='width:100%'/>");
    });

    $('#pickdateId').datepicker({
        format: 'yyyy-mm-dd',
        todayHighlight: true,
        autoclose: true,
    });

    function tabledata(obj) {
        var countRows = $("#tableId>tbody>tr").length;
        var allRows = [];        
        for (var i = 0; i < countRows; i++) {
            var _studentId = $('#tableId>tbody').find("tr:eq(" + i + ")").find("td:eq(0)").text();
            var _markValue = $('#tableId>tbody').find("tr:eq(" + i + ")").find("td:eq(3) input:eq(0)").val();
            debugger;
            if (_markValue === undefined) {
                continue;
            }

            var row = {
                'StudentId': _studentId.trim(),
                'GradeId': obj.GradeId,
                'SubjectId': obj.SubjectId,
                'MarkValue': _markValue.trim(),
                'Score': _markValue.trim(),
                'ExamType': "none",
                'ExamDate': obj.ExamDate
            };

            allRows.push(row);
        }

        return allRows;
    }

</script>

